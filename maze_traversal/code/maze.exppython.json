{
  "mode": "Text",
  "textContent": "#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain = Brain()\n\n# Robot configuration code\nbrain_inertial = Inertial()\nleft_motor_a = Motor(Ports.PORT1, False)\nleft_motor_b = Motor(Ports.PORT6, False)\nleft_drive_smart = MotorGroup(left_motor_a, left_motor_b)\nright_motor_a = Motor(Ports.PORT5, True)\nright_motor_b = Motor(Ports.PORT10, True)\nright_drive_smart = MotorGroup(right_motor_a, right_motor_b)\ndrivetrain = SmartDrive(left_drive_smart, right_drive_smart, brain_inertial, 219.44, 320, 40, MM, 1)\nlimit_switch_b = Limit(brain.three_wire_port.b)\nlimit_switch_c = Limit(brain.three_wire_port.c)\nservo_a = Servo(brain.three_wire_port.a)\ndistance_8 = Distance(Ports.PORT8)\n\n\n# Wait for sensor(s) to fully initialize\nwait(100, MSEC)\n\ndef calibrate_drivetrain():\n    # Calibrate the Drivetrain Inertial\n    sleep(200, MSEC)\n    brain.screen.print(\"Calibrating\")\n    brain.screen.next_row()\n    brain.screen.print(\"Inertial\")\n    brain_inertial.calibrate()\n    while brain_inertial.is_calibrating():\n        sleep(25, MSEC)\n    brain.screen.clear_screen()\n    brain.screen.set_cursor(1, 1)\n\n#endregion VEXcode Generated Robot Configuration\n# ------------------------------------------\n# \n# \tProject:      Maze Traversal\n#\tAuthor:       Creed (Goldencode20), Augie, Nathaniel (nboynick)\n#\tCreated:      2024-02-16\n#\tDescription:  Code for the maze traversal assignment\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n# COPY CODE FROM src.py INTO THIS FILE",
  "textLanguage": "python",
  "rconfig": [
    {
      "port": [
        1,
        6,
        5,
        10,
        null
      ],
      "name": "drivetrain",
      "customName": false,
      "deviceType": "Drivetrain",
      "deviceClass": "smartdrive",
      "setting": {
        "type": "4-motor",
        "wheelSize": "wheel275in",
        "gearRatio": "1:1",
        "direction": "fwd",
        "gyroType": "integrated",
        "width": "295",
        "unit": "mm",
        "wheelbase": "40",
        "wheelbaseUnit": "mm",
        "xOffset": "0",
        "xOffsetUnit": "mm",
        "yOffset": "0",
        "yOffsetUnit": "mm",
        "thetaOffset": "180"
      },
      "triportSourcePort": null
    },
    {
      "port": [
        2
      ],
      "name": "limit_switch_b",
      "customName": false,
      "deviceType": "LimitSwitch",
      "deviceClass": "limit",
      "setting": {},
      "triportSourcePort": 22
    },
    {
      "port": [
        3
      ],
      "name": "limit_switch_c",
      "customName": false,
      "deviceType": "LimitSwitch",
      "deviceClass": "limit",
      "setting": {},
      "triportSourcePort": 22
    },
    {
      "port": [
        1
      ],
      "name": "servo_a",
      "customName": false,
      "deviceType": "Servo",
      "deviceClass": "servo",
      "setting": {},
      "triportSourcePort": 22
    },
    {
      "port": [
        8
      ],
      "name": "distance_8",
      "customName": false,
      "deviceType": "Distance",
      "deviceClass": "distance",
      "setting": {},
      "triportSourcePort": 22
    }
  ],
  "slot": 0,
  "platform": "EXP",
  "sdkVersion": "20220726.10.00.00",
  "appVersion": "3.0.4",
  "minVersion": "3.0.0",
  "fileFormat": "1.2.0",
  "icon": "",
  "targetBrainGen": "First",
  "v5SoundsEnabled": false,
  "target": "Physical"
}
